// <auto-generated />
using Blog.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Blog.Migrations
{
    [DbContext(typeof(BlogContext))]
    [Migration("20201020220053_fixes")]
    partial class fixes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Blog.Models.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BlogPost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TimeStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BlogId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            BlogId = 1,
                            BlogPost = "Senaste nytt från Ekot ",
                            CategoryId = "P",
                            TimeStamp = "2020-06-01",
                            UserId = 1
                        },
                        new
                        {
                            BlogId = 2,
                            BlogPost = "TT nyheter i sammanfattning ... ",
                            CategoryId = "P",
                            TimeStamp = "2020-06-02",
                            UserId = 1
                        },
                        new
                        {
                            BlogId = 3,
                            BlogPost = "Änglarna gjorde mål på Sankte Pär i Pärleporten ... ",
                            CategoryId = "S",
                            TimeStamp = "2020-06-03",
                            UserId = 2
                        },
                        new
                        {
                            BlogId = 4,
                            BlogPost = "Vädret mycket regn, åska och det blåser smådj_vlar",
                            CategoryId = "W",
                            TimeStamp = "2020-06-04",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Blog.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categorys");

                    b.HasData(
                        new
                        {
                            CategoryId = "P",
                            CategoryName = "Politics"
                        },
                        new
                        {
                            CategoryId = "E",
                            CategoryName = "Economy"
                        },
                        new
                        {
                            CategoryId = "W",
                            CategoryName = "Weather"
                        },
                        new
                        {
                            CategoryId = "S",
                            CategoryName = "Sports"
                        });
                });

            modelBuilder.Entity("Blog.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            UserName = "Admin_1"
                        },
                        new
                        {
                            UserId = 2,
                            UserName = "Admin_2"
                        },
                        new
                        {
                            UserId = 3,
                            UserName = "Admin_3"
                        });
                });

            modelBuilder.Entity("Blog.Models.Blog", b =>
                {
                    b.HasOne("Blog.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("Blog.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
