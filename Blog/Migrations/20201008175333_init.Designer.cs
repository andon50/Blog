// <auto-generated />
using Blog.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Blog.Migrations
{
    [DbContext(typeof(BlogContext))]
    [Migration("20201008175333_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Blog.Models.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BlogPost")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GetDateTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BlogId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            BlogId = 1,
                            BlogPost = "Älskar att koda i C sharp ... ",
                            CategoryId = "C",
                            GetDateTime = "2020-06-01",
                            UserId = 2
                        },
                        new
                        {
                            BlogId = 2,
                            BlogPost = "Älskar att koda i Java ... ",
                            CategoryId = "J",
                            GetDateTime = "2020-06-02",
                            UserId = 2
                        },
                        new
                        {
                            BlogId = 3,
                            BlogPost = "Tycker inte om att koda i C sharp ... ",
                            CategoryId = "C",
                            GetDateTime = "2020-06-03",
                            UserId = 1
                        },
                        new
                        {
                            BlogId = 4,
                            BlogPost = "Tycker inte om att koda i Java ... men gillar Java kaffe ",
                            CategoryId = "J",
                            GetDateTime = "2020-06-04",
                            UserId = 3
                        });
                });

            modelBuilder.Entity("Blog.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categorys");

                    b.HasData(
                        new
                        {
                            CategoryId = "C",
                            CategoryName = "C Sharp"
                        },
                        new
                        {
                            CategoryId = "J",
                            CategoryName = "Java"
                        });
                });

            modelBuilder.Entity("Blog.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            UserName = "MonaLisa"
                        },
                        new
                        {
                            UserId = 2,
                            UserName = "PlåtNiklas"
                        },
                        new
                        {
                            UserId = 3,
                            UserName = "SkånskaLasse"
                        });
                });

            modelBuilder.Entity("Blog.Models.Blog", b =>
                {
                    b.HasOne("Blog.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Blog.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
